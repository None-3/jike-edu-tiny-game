# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protocol import game_pb2 as protocol_dot_game__pb2


class GameStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/game.Game/Login',
                request_serializer=protocol_dot_game__pb2.LoginReq.SerializeToString,
                response_deserializer=protocol_dot_game__pb2.LoginResp.FromString,
                )
        self.Register = channel.unary_unary(
                '/game.Game/Register',
                request_serializer=protocol_dot_game__pb2.RegisterReq.SerializeToString,
                response_deserializer=protocol_dot_game__pb2.RegisterResp.FromString,
                )
        self.GetOnlineUsers = channel.unary_unary(
                '/game.Game/GetOnlineUsers',
                request_serializer=protocol_dot_game__pb2.GetOnlineUsersReq.SerializeToString,
                response_deserializer=protocol_dot_game__pb2.GetOnlineUsersResp.FromString,
                )


class GameServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnlineUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=protocol_dot_game__pb2.LoginReq.FromString,
                    response_serializer=protocol_dot_game__pb2.LoginResp.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=protocol_dot_game__pb2.RegisterReq.FromString,
                    response_serializer=protocol_dot_game__pb2.RegisterResp.SerializeToString,
            ),
            'GetOnlineUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnlineUsers,
                    request_deserializer=protocol_dot_game__pb2.GetOnlineUsersReq.FromString,
                    response_serializer=protocol_dot_game__pb2.GetOnlineUsersResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.Game', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Game(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.Game/Login',
            protocol_dot_game__pb2.LoginReq.SerializeToString,
            protocol_dot_game__pb2.LoginResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.Game/Register',
            protocol_dot_game__pb2.RegisterReq.SerializeToString,
            protocol_dot_game__pb2.RegisterResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOnlineUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.Game/GetOnlineUsers',
            protocol_dot_game__pb2.GetOnlineUsersReq.SerializeToString,
            protocol_dot_game__pb2.GetOnlineUsersResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class BattleStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BattleLite = channel.unary_unary(
                '/game.Battle/BattleLite',
                request_serializer=protocol_dot_game__pb2.BattleLiteReq.SerializeToString,
                response_deserializer=protocol_dot_game__pb2.BattleLiteResp.FromString,
                )


class BattleServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BattleLite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BattleServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BattleLite': grpc.unary_unary_rpc_method_handler(
                    servicer.BattleLite,
                    request_deserializer=protocol_dot_game__pb2.BattleLiteReq.FromString,
                    response_serializer=protocol_dot_game__pb2.BattleLiteResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'game.Battle', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Battle(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BattleLite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/game.Battle/BattleLite',
            protocol_dot_game__pb2.BattleLiteReq.SerializeToString,
            protocol_dot_game__pb2.BattleLiteResp.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
